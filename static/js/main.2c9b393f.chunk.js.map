{"version":3,"sources":["components/Card.js","components/Cardlist.js","components/searchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","name","email","id","className","alt","src","Cardlist","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","OnSearchChange","event","searchfield","target","value","fetch","then","Response","json","users","filterrobots","filter","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"+MAaeA,EAXF,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,KAAOC,EAAgB,EAAhBA,MAAQC,EAAQ,EAARA,GAC1B,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA2BH,EAA3B,cACrB,gCACI,6BAAKF,IACL,4BAAIC,WCeLK,EApBC,SAAC,GAChB,IADiBC,EAClB,EADkBA,OAEd,OACI,8BAEAA,EAAOC,KAAI,SAACC,EAAMC,GACjB,OACG,cAAC,EAAD,CAEIR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMNC,EAfG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aACpB,OACI,qBAAKT,UAAW,MAAhB,SAEI,uBACAA,UAAY,mCACZU,KAAK,SACLC,YAAc,gBACdC,SAAWH,OCDJI,EAPA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAArE,SACKJ,EAAMK,YCgBJC,E,kDAjBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAQ,CACTC,UAAU,GAHA,E,8DAMAC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAG5B,OAAGG,KAAKJ,MAAMC,SACH,sCAEJG,KAAKX,MAAMK,a,GAdKQ,aC2CZC,E,kDAvCX,aAAe,IAAD,8BACV,gBAWJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAACK,YAAcD,EAAME,OAAOC,SAX1C,EAAKZ,MAAO,CACRjB,OAAQ,GACR2B,YAAc,IAJR,E,gEAOM,IAAD,OACfG,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAK,EAAKZ,SAAS,CAACtB,OAAQkC,S,+BAMjC,IAAD,OACCC,EAAed,KAAKJ,MAAMjB,OAAOoC,QAAO,SAAApC,GAC9C,OAAOA,EAAOP,KAAK4C,cAAcC,SAAS,EAAKrB,MAAMU,YAAYU,kBAEpE,OAA+B,IAA5BhB,KAAKJ,MAAMjB,OAAOuC,OACV,oBAAI3C,UAAW,KAAf,qBAIA,sBAAKA,UAAW,KAAhB,UACI,6CACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAUmC,e,GA/B3BZ,aCMHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,EAAD,IAAQC,SAASC,eAAe,SAMlCX,M","file":"static/js/main.2c9b393f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({name , email , id}) => {\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img alt='robots' src ={`https://robohash.org/${id}?200x200`}/>\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card'\r\n\r\nconst Cardlist =({robots}) =>\r\n{\r\n    return (\r\n        <div>\r\n        {\r\n        robots.map((user, i ) => {\r\n         return (\r\n            <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n            />\r\n          );\r\n     })\r\n    }\r\n      </div>\r\n    )\r\n\r\n}\r\nexport default Cardlist;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\nreturn(\r\n    <div className ='pa2'>\r\n\r\n        <input \r\n        className = 'pa3 ba b--green bg-lightest-blue' \r\n        type='search' \r\n        placeholder = 'search robots'\r\n        onChange= {searchChange}\r\n        />\r\n    \r\n    </div>   \r\n);\r\n\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY: 'scroll', border: '1px solid black', height :'800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            hasError :false \r\n        }\r\n    }\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true})\r\n    }\r\nrender () {\r\n    if(this.state.hasError) {\r\n        return <h1>oops</h1>\r\n    }\r\n    return this.props.children\r\n}\r\n\r\n}\r\nexport default ErrorBoundry","import React, {Component} from 'react';\r\nimport Cardlist from '../components/Cardlist';\r\nimport SearchBox from '../components/searchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state= {\r\n            robots: [],\r\n            searchfield : ''\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(Response=> Response.json())\r\n        .then(users =>  this.setState({robots: users}))   \r\n    }\r\n    OnSearchChange = (event) => {\r\n        this.setState({searchfield : event.target.value})\r\n\r\n    }\r\n    render (){\r\n        const filterrobots = this.state.robots.filter(robots=>{\r\n        return robots.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n     })\r\n     if(this.state.robots.length=== 0) {\r\n         return <h1 className ='tc'>Loading</h1>\r\n     } else {\r\n\r\n         return (\r\n                <div className= 'tc'>        \r\n                    <h1>RoboFriends</h1>\r\n                    <SearchBox searchChange={this.OnSearchChange}/>\r\n                    <Scroll>   \r\n                        <ErrorBoundry>         \r\n                         <Cardlist robots = {filterrobots}/>\r\n                         </ErrorBoundry> \r\n                    </Scroll>\r\n                </div>\r\n\r\n            );\r\n         }\r\n    }\r\n}\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <App/>, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}